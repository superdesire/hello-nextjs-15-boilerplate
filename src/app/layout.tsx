import type { Metadata } from "next";
import { Geist_Mono } from "next/font/google";
import localFont from "next/font/local";
import "./globals.css";
import { Providers } from "@/providers";
import { getLocale, getMessages } from "next-intl/server";

const pretendard = localFont({
  src: [
    {
      path: './font/PretendardStd-Thin.otf',
      weight: '100',
      style: 'normal',
    },
    {
      path: './font/PretendardStd-ExtraLight.otf',
      weight: '200',
      style: 'normal',
    },
    {
      path: './font/PretendardStd-Light.otf',
      weight: '300',
      style: 'normal',
    },
    {
      path: './font/PretendardStd-Regular.otf',
      weight: '400',
      style: 'normal',
    },
    {
      path: './font/PretendardStd-Medium.otf',
      weight: '500',
      style: 'normal',
    },
    {
      path: './font/PretendardStd-SemiBold.otf',
      weight: '600',
      style: 'normal',
    },
    {
      path: './font/PretendardStd-Bold.otf',
      weight: '700',
      style: 'normal',
    },
    {
      path: './font/PretendardStd-ExtraBold.otf',
      weight: '800',
      style: 'normal',
    },
    {
      path: './font/PretendardStd-Black.otf',
      weight: '900',
      style: 'normal',
    },
  ],
  variable: '--font-pretendard',
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const locale = await getLocale();
  const messages = await getMessages();
  return (
    <html lang={locale} className="h-full" suppressHydrationWarning>
      <body
        className={`${pretendard.variable} ${geistMono.variable} antialiased`}
      >
        <Providers messages={messages} locale={locale}>
          {children}
        </Providers>
      </body>
    </html>
  );
}
